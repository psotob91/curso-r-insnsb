edad <- c(9, 12, 10, 8, 7, 6)
edad
hb <- c(11.2, 10.4, 9.8, NA, 14, 8.1)
hb
quantile(edad, probs = c(0.25))
quantile(edad, probs = c(0.75))
quantile(edad, probs = c(0.25, 0.5, 0.75))
quantile(edad, probs = c(0.67))
quantile(edad, probs = seq(0, 0.99, 0.01))
var(edad)
var(hb, na.rm = TRUE)
sd(edad)
sd(hb, na.rm = TRUE)
min(edad)
max(edad)
max(edad) - min(edad)
range(edad)
range(hb, na.rm = TRUE)
quantile(edad, probs = c(0.25, 0.75))
9.75 - 7.25
p25 <- quantile(edad, probs = c(0.25))
p25
p75 <- quantile(edad, probs = c(0.75))
p75
p75 - p25
IQR(edad)
IQR(hb, na.rm = TRUE)
100 * sd(edad) / mean(edad)
media <- mean(edad)
sd <- sd(edad)
100 * (sd / media)
#| echo: false
bd_inmuno <- import("boost_inmuno.dta") %>%
characterize()
bd_inmuno %>%
summarise(mean(edad))
bd_inmuno %>%
summarise(Media = mean(edad))
bd_inmuno %>%
summarise(
Media = mean(edad),
DE = sd(edad),
Mediana = median(edad),
`Percentil 25` = quantile(edad, 0.25),
`Percentil 75` = quantile(edad, 0.75)
)
bd_inmuno %>%
summarise(
`Media de edad` = mean(edad),
`DE de edad` = sd(edad),
`Mediana de edad` = median(edad),
Mediana_IgG_Final = median(IgG_Basal, na.rm = TRUE),
RIQ_IgG_Final = IQR(IgG_Basal, na.rm = TRUE)
)
library(summarytools)
bd_inmuno %>%
descr(edad)
bd_inmuno %>%
descr()
bd_inmuno %>%
select(edad, IgG_Basal) %>%
descr()
bd_inmuno %>%
descr(edad,
stats = c("mean", "sd", "min", "max"))
library(Hmisc)
describe(bd_inmuno$edad)
bd_inmuno %>%
pull(edad) %>%
describe()
#| echo: false
notas <- c(15, 20, 17, 12)
#| echo: false
desvio_notas <- notas - mean(notas)
datos <- data.frame(
notas = notas,
promedio_notas = mean(notas),
desvio_notas = desvio_notas,
desvio_promedio = mean(desvio_notas)
)
datos %>%
kbl() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
full_width = T, font_size = 20)
#| echo: false
library(countdown)
countdown_timer <- function(
minutes = 1,
play_sound = TRUE,
font_size = "2em",
...
) {
countdown(
minutes = minutes,
# Fanfare when it's over
play_sound = play_sound,
# Set timer theme to match solarized colors
color_border              = "#404041",
color_text                = "white",
color_background = "#000000",
color_running_background  = "#72994E",
color_running_text        = "white",
color_finished_background = "#EE6331",
color_finished_text       = "white",
font_size = font_size,
...
)
}
#| echo: false
countdown_timer(5)
#| echo: false
prev_inc <- data.frame(
Caracteristica = c("Numerador", "Denominador", "¿Probabilidad de qué...?", "Notas"),
Prevalencia = c("Eventos existentes en t", "Todos los individuos (con y sin eventos) en t", "Probabilidad de tener el evento", "Solo requiere un punto en el tiempo. A menudo se busca poblaciones relevantes y usa muestras probabilísticas."),
Incidencia = c("Eventos nuevos durante el periodo t", "Individuos sin evento al inicio del periodo t", "Probabilidad de desarrolalr evento nuevo", "Requiere al menos dos puntos de tiempo. Puede estimarse en poblaciones relevantes. A menudo se usan muestras no probabilísticas en las que es factible el seguimiento (p. ej., pacientes)")
)
prev_inc %>%
kbl(col.names = c("", "Prevalencia", "Incidencia Acumulada")) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
full_width = T,
font_size = 40)
#| echo: false
options(scipen=999)
odd_prob <- data.frame(
Probabilidad = c(0, 0.01, 0.02, 0.03, 0.04, 0.05, 0.1, 0.2, 0.3, 0.4, 0.5, 0.8, 0.9, 0.99, 0.999)
) %>%
mutate(
Odds = Probabilidad / (1 - Probabilidad),
Diferencia = Odds - Probabilidad
)
odd_prob %>%
kbl() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
full_width = T,
font_size = 30)
#| echo: false
odd_prob2 <- data.frame(
Probabilidad = seq(0, 0.999, 0.001)
) %>%
mutate(
Odds = Probabilidad / (1 - Probabilidad),
Diferencia = Odds - Probabilidad
)
#| echo: false
#| fig-align: center
#| out-width: 100%
odd_prob2 %>%
filter(Probabilidad < 0.3) %>%
ggplot(aes(x = Probabilidad, y = Odds)) +
geom_line(colour = "blue") +
scale_x_continuous(breaks = seq(0, 0.45, 0.05), limits = c(0, 0.45)) +
scale_y_continuous(breaks = seq(0, 0.45, 0.05), limits = c(0, 0.45)) +
ggtitle("Odds y probabilidades son similares cuando la probabilidad es pequeña") +
theme_bw() -> plot1
plot1
# plot1 %>%
#   ggplotly()
#| echo: false
#| fig-align: center
#| out-width: 100%
odd_prob2 %>%
ggplot(aes(x = Probabilidad, y = Odds)) +
geom_line(colour = "blue") +
scale_x_continuous(breaks = seq(0, 1, 0.05), limits = c(0, 1)) +
scale_y_continuous(breaks = seq(0, 1000, 100), limits = c(0, 1000)) +
ggtitle("Conforme la probabilidad aumenta, los odds crecen exponencialmente") +
theme_bw() -> plot2
plot2
# plot2 %>%
#   ggplotly()
#| echo: false
bd_inmuno <- read_stata("boost_inmuno.dta") %>%
as_factor()
table(bd_inmuno$sexo)
prop.table(table(bd_inmuno$sexo))
table(bd_inmuno$sexo, useNA = "always")
bd_inmuno %>%
group_by(sexo) %>%
summarise(n = n())
library(scales) # Para agregar escalas, p. ej., porcentajes %
bd_inmuno %>%
group_by(sexo) %>%
summarise(n = n()) %>%
mutate(
Porcentaje = scales::percent(n / sum(n))
)
bd_inmuno %>%
count(sexo)
library(scales) # Para agregar escalas, p. ej., porcentajes %
bd_inmuno %>%
count(sexo) %>%
mutate(
Porcentaje = scales::percent(n / sum(n))
)
library(janitor)
bd_inmuno %>%
tabyl(sexo)
bd_inmuno %>%
tabyl(sexo, show_na = FALSE) %>%
adorn_pct_formatting()
bd_inmuno %>%
tabyl(sexo, show_na = FALSE)
bd_inmuno %>%
tabyl(sexo, show_na = FALSE) %>%
adorn_pct_formatting() %>%
adorn_totals()
bd_inmuno %>%
tabyl(sexo, show_na = FALSE) %>%
adorn_pct_formatting(digits = 2) %>%
adorn_totals()
bd_inmuno %>%
select(sexo) %>%
freq()
bd_inmuno %>%
select(sexo, comorb) %>%
freq()
bd_inmuno %>%
freq()
bd_inmuno %>%
freq(report.nas = FALSE,
totals = FALSE,
cumul = FALSE,
headings= FALSE)
bd_inmuno %>%
select(sexo, ant_COV) %>%
freq(report.nas = FALSE,
totals = FALSE,
cumul = FALSE,
headings= FALSE)
#| echo: false
library(haven)
datos <- read_stata("maca_meno_fase1.dta") %>%
as_factor() %>%
select(id, time, treat, age, race, married2, procedence, weight, height, e2) %>%
mutate(treated = case_when(
treat == "Placebo" ~ 0,
treat %in% c("Dosis 1", "Dosis 2") ~ 1,
TRUE ~ as.numeric(NA)
)) %>%
set_variable_labels(treated = "Treated") %>%
select(id, time, treat, treated, age, race, married2, procedence, weight, height, e2)
#| echo: false
head(datos) %>%
kbl() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
full_width = T,
font_size = 30)
# kable_paper("striped", full_width = F) %>%
# column_spec(1, bold = T) %>%
# collapse_rows(columns = 1:2, valign = "top")  %>%
# row_spec(0, background = "black", color = "white", bold = TRUE) %>%
# row_spec(c(1, 3:5), background = "white", color = "black", bold = TRUE) %>%
# row_spec(c(2, 6, 7), background = "gray", color = "white", bold = TRUE)
#| echo: false
#| label: 'describe-small-trial'
tibble(
Variable = names(datos),
Label = map_chr(Variable, ~attr(datos[[.x]], "label"))
) %>%
kbl() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
full_width = T,
font_size = 30)
#| echo: false
#| message: false
#| warning: false
#| error: false
#| fig-align: center
#| out-width: 45%
library(gtsummary)
datos %>%
select(age, treated, married2, e2) %>%
tbl_summary() %>%
as_gt() %>%
gtsave("tab1.png", "img/")
knitr::include_graphics("img/tab1.png")
#| echo: false
#| message: false
#| warning: false
#| error: false
#| fig-align: center
#| out-width: 45%
datos %>%
select(age, treated, married2, height, e2) %>%
tbl_summary() %>%
as_gt() %>%
gtsave("tab2.png", "img/")
knitr::include_graphics("img/tab2.png")
#| echo: false
#| message: false
#| warning: false
#| error: false
#| fig-align: center
#| out-width: 45%
datos %>%
select(age, treated, married2, height, e2) %>%
tbl_summary(
type = list(height ~ "continuous")
) %>%
as_gt() %>%
gtsave("tab3.png", "img/")
knitr::include_graphics("img/tab3.png")
#| echo: false
#| message: false
#| warning: false
#| error: false
#| fig-align: center
#| out-width: 45%
datos %>%
select(age, treated, married2, height, e2) %>%
tbl_summary(
type = list(height ~ "continuous"),
statistic = list(
age ~ "{mean} ({sd})",
married2 ~ "{n}  / {N} ({p}%)"
)
)
#| echo: false
#| message: false
#| warning: false
#| error: false
#| fig-align: center
#| out-width: 45%
# datos %>%
#   select(age, treated, married2, height, e2) %>%
#   tbl_summary(
#     type = list(height ~ "continuous"),
#     statistic = list(
#       age ~ "{mean} ({sd})",
#       married2 ~ "{n}  / {N} ({p}%)"
#     )
#   )
knitr::include_graphics("img/tab4.png")
#| echo: false
#| message: false
#| warning: false
#| error: false
#| fig-align: center
#| out-width: 45%
datos %>%
select(age, treated, married2, height, e2) %>%
tbl_summary(
type = list(height ~ "continuous"),
statistic = list(
c(age, height) ~ "{mean} ({sd})",
c(married2, treated) ~ "{n}  / {N} ({p}%)"
)
) %>%
as_gt() %>%
gtsave("tab5.png", "img/")
#| echo: false
#| message: false
#| warning: false
#| error: false
#| fig-align: center
#| out-width: 45%
datos %>%
select(age, treated, married2, height, e2) %>%
tbl_summary(
type = list(c(age, height) ~ "continuous2"),
statistic = list(
c(age, height) ~ c("{mean} ({sd})",
"{median} ({p25} - {p75})"),
c(married2, treated) ~ "{n}  / {N} ({p}%)"
)
) %>%
as_gt() %>%
gtsave("tab6.png", "img/")
#| echo: false
#| message: false
#| warning: false
#| error: false
#| fig-align: center
#| out-width: 45%
# datos %>%
#   select(age, treated, married2, height, e2) %>%
#   tbl_summary(
#     type = list(c(age, height) ~ "continuous2"),
#     statistic = list(
#       c(age, height) ~ c("{mean} ({sd})",
#                          "{median} ({p25} - {p75})",
#                          "{min} - {max}"),
#       c(married2, treated) ~ "{n}  / {N} ({p}%)"
#     )
#   ) %>%
#   as_gt() %>%
#   gtsave("tab7.png", "img/")
knitr::include_graphics("img/tab7.png")
#| echo: false
#| message: false
#| warning: false
#| error: false
#| fig-align: center
#| out-width: 45%
# datos %>%
#   select(age, treated, married2, height, e2) %>%
#   tbl_summary(
#     type = list(c(age, height, e2) ~ "continuous2"),
#     statistic = list(
#       c(age, height) ~ c("{mean} ({sd})",
#                          "{min} - {max}"),
#       c(e2) ~ c("{median} ({p25} - {p75})",
#                 "{min} - {max}"),
#       c(married2, treated) ~ "{n}  / {N} ({p}%)"
#     )
#   ) %>%
#   as_gt() %>%
#   gtsave("tab8.png", "img/")
knitr::include_graphics("img/tab8.png")
#| echo: false
#| message: false
#| warning: false
#| error: false
#| fig-align: center
#| out-width: 45%
# datos %>%
#   select(age, treated, married2, height, e2) %>%
#   tbl_summary(
#     type = list(c(age, height, e2) ~ "continuous2"),
#     statistic = list(
#       c(age, height) ~ c("{mean} ({sd})",
#                          "{min} - {max}"),
#       c(e2) ~ c("{median} ({p25} - {p75})",
#                 "{min} - {max}"),
#       c(married2, treated) ~ "{n}  / {N} ({p}%)"
#     ),
#     label = list(
#       treated ~ "Treated with supplement",
#       e2 ~ "Estradiol, UI",
#       married2 ~ "Marital status"
#     )
#   ) %>%
#   as_gt() %>%
#   gtsave("tab9.png", "img/")
knitr::include_graphics("img/tab9.png")
#| echo: false
#| message: false
#| warning: false
#| error: false
#| fig-align: center
#| out-width: 45%
# datos %>%
#   select(age, treated, married2, height, e2) %>%
#   tbl_summary(
#     type = list(c(age, height, e2) ~ "continuous2"),
#     statistic = list(
#       c(age, height) ~ c("{mean} ({sd})",
#                          "{min} - {max}"),
#       c(e2) ~ c("{median} ({p25} - {p75})",
#                 "{min} - {max}"),
#       c(married2, treated) ~ "{n}  / {N} ({p}%)"
#     ),
#     label = list(
#       treated ~ "Treated with supplement",
#       e2 ~ "Estradiol, UI",
#       married2 ~ "Marital status"
#     ),
#     digits = list(
#       c(age) ~ 1, c(height, e2) ~ 2,
#       c(married2, treated) ~ 1
#     )
#   ) %>%
#   as_gt() %>%
#   gtsave("tab10.png", "img/")
knitr::include_graphics("img/tab10.png")
#| echo: false
#| message: false
#| warning: false
#| error: false
#| fig-align: center
#| out-width: 45%
#| code-overflow: wrap
datos %>%
select(age, treated, married2, height, e2) %>%
tbl_summary(
type = list(height ~ "continuous"),
label = list(
treated ~ "Treated with supplement", e2 ~ "Estradiol, UI",
married2 ~ "Marital status"
),
missing = "ifany"
) %>%
as_gt() %>%
gtsave("tab14.png", "img/")
knitr::include_graphics("img/tab14.png")
#| echo: false
#| message: false
#| warning: false
#| error: false
#| fig-align: center
#| out-width: 45%
#| code-overflow: wrap
datos %>%
select(age, treated, married2, height, e2) %>%
tbl_summary(
type = list(c(age, height, e2) ~ "continuous2"),
statistic = list(
c(age, height) ~ c("{mean} ({sd})", "{min} - {max}"),
c(e2) ~ c("{median} ({p25} - {p75})", "{min} - {max}"),
c(married2, treated) ~ "{n}  / {N} ({p}%)"
),
label = list(
treated ~ "Treated with supplement", e2 ~ "Estradiol, UI",
married2 ~ "Marital status"
),
digits = list(
c(age) ~ 1, c(height, e2) ~ 2, c(married2, treated) ~ 1
),
missing = "no"
) %>%
as_gt() %>%
gtsave("tab13.png", "img/")
