---
title: "Simulaciones de No Linealidad para GLM"
format: html
---

## Paquetes

```{r}
library(MASS)
library(tidyverse)
library(rio)
library(ggeffects)
library(car)
library(statmod)
library(broom)
library(simglm)
```


## Fuente

Partial Residual Plots in Generalized Linear Models <https://doi.org/10.2307/2670123>

## Simulaciones

### Poisson - Cov. Indep. - x^2

```{r}
set.seed(2018)
n <- 200
x1 <- rnorm(n, 0, 1)
x2 <- runif(n, -2, 2)
beta1 <- -1 
beta2 <- 1

nu_i <- 4 + beta1 * x1 + beta2 * x2 ^ 2

mu_i <- exp(nu_i)

y_i <- rpois(n, nu_i)



datos <- data.frame(
  y_i = y_i, 
  x1 = x1, 
  x2 = x2
)
```

```{r}
mod <- glm(y_i ~ x1 + x2, 
    family = poisson(link = "log"), 
    data = datos)

summary(mod)
```

```{r}
xb_x1 <- ggpredict(mod, "x1 [all]")
plot(xb_x1, residuals = TRUE, residuals.line = TRUE)
```

```{r}
xb_x2 <- ggpredict(mod, "x2 [all]")
plot(xb_x2, residuals = TRUE, residuals.line = TRUE)
```


```{r}
termplot(mod, partial.resid = TRUE)
```


```{r}
ceresPlots(mod)
```


```{r}
datos[c("part_res_x1", "part_res_x2")] <- residuals(mod, "partial")
```

```{r}
export(datos, "poi_x_2_indep.dta")
```

### Lineal - Cov. Indp. - X Lineal

```{r}
# set.seed(2018)
# 
# sim_arguments <- list(
#   formula = y ~ 1 + weight + age + sex + grade,
#   fixed = list(weight = list(var_type = 'continuous', mean = 180, sd = 30),
#                age = list(var_type = 'ordinal', levels = 30:60),
#                sex = list(var_type = 'factor', 
#                           levels = c('male', 'female')),
#                grade = list(var_type = 'factor', 
#                             levels = c('freshman', 'sophomore',
#                                        'junior', 'senior'))),
#   error = list(variance = 25),
#   sample_size = 10000,
#   reg_weights = c(2, .1, .55, 1.5, .75, 1.8, 2.5)
# )
# 
# simulate_fixed(data = NULL, sim_arguments) %>%
#   simulate_error(sim_arguments) %>%
#   generate_response(sim_arguments) %>% 
#   head()
```


```{r}
# set.seed(2018)
# 
# sim_arguments <- list(
#   formula = y ~ 1 + weight + age + age:age + age:age:age + sex + grade,
#   fixed = list(weight = list(var_type = 'continuous', mean = 180, sd = 30),
#                age = list(var_type = 'ordinal', levels = 30:60),
#                sex = list(var_type = 'factor', 
#                           levels = c('male', 'female')),
#                grade = list(var_type = 'factor', 
#                             levels = c('freshman', 'sophomore',
#                                        'junior', 'senior'))),
#   error = list(variance = 25),
#   sample_size = 10000,
#   reg_weights = c(2, .1, .15, -.20, .55, 1.5, .75, 1.8, 2.5)
# )
# 
# simulate_fixed(data = NULL, sim_arguments) %>%
#   simulate_error(sim_arguments) 
```



```{r}
# mod <- glm(y_i ~ x1 + x2, 
#     family = poisson(link = "log"), 
#     data = datos)
# 
# summary(mod)
```

```{r}
library(mfp)
data(bodyfat)
```

